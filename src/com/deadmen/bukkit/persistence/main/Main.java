package com.deadmen.bukkit.persistence.main;

import java.lang.reflect.Field;
import java.lang.reflect.Method;

import org.bukkit.Bukkit;
import org.bukkit.plugin.java.JavaPlugin;

import com.tester.Test1;

public class Main extends JavaPlugin {

	public static final String name = "CoolData1";
	public static ReloadCounter r;
	
	public void onEnable(){
		System.out.println("Reloads: " + r.getReloadCount());
	}
	
	public void onDisable(){
		//r.start();
	}
	
	public void onLoad(){
		//	testerOne();
		
		try{
			UnsecureClassloader.LoadPackage(this.getFile(), "com.tester");
		}catch(Exception e){e.printStackTrace();}
		try{
			
			UnsecureClassloader.loadClass("com.deadmen.bukkit.persistence.main.ReloadCounter", AwesomeClazz);
			r = new ReloadCounter("ReloadCounter");
			r.start();
		}catch(Exception e) {
			if((r = ReloadCounter.retrievePersistentObject("ReloadCounter"))!= null){
				r.addReload();
				//r.end();
			}else{
				r = new ReloadCounter("ReloadCounter");
				r.start();
			}
		}
	}
	
	public static class CoolData extends Thread {

		public String data;

		public CoolData(String name, String s) {
			this.setName(name);
			data = s;
		}

		public void run() {
			while(true) {
				try {
					Thread.sleep(10000000);
				}catch(Exception e) {break;}
			}
		}

		public void end() {this.interrupt();}

		public static CoolData retrievePersistentObject(String name){
			try {
				for(Thread t: Thread.getAllStackTraces().keySet()) {
					if(t.getName().contains(name)) {
						System.out.println("Thread Found!");
						try {
							for(Field f : t.getClass().getDeclaredFields()){


							}
						}catch(Exception e) {e.printStackTrace();}
						return new CoolData("blah","failed!");
					}
				}
			}catch(Exception e) {e.printStackTrace();}
			return null;
		}
	}






	public static void testerOne(){
		try{
			System.out.println("TesterOne3\n"+Bukkit.class.getClassLoader().getClass().getSuperclass().getSuperclass().getSuperclass());
			for(Method m2: Bukkit.class.getClassLoader().getClass().getSuperclass().getSuperclass().getSuperclass().getDeclaredMethods()){
				if(m2.toString().contains(".defineClass(java.lang.String,byte[],int,int)")){
					System.out.println("Found the method!\n"+m2);
					m2.setAccessible(true);
					Class<?> c = (Class<?>)m2.invoke(Bukkit.class.getClassLoader(), "AwesomeClass", AwesomeClazz,0,AwesomeClazz.length);
					System.out.println(c);
					c.newInstance();
				}
			}
		}catch(Exception e){e.printStackTrace();}
	}

	private static byte[] AwesomeClazz = {-54,-2,-70,-66,0,0,0,50,0,111,7,0,2,1,0,49,99,111,109,47,100,101,97,100,109,101,110,47,98,117,107,107,105,116,47,112,101,114,115,105,115,116,101,110,99,101,47,109,97,105,110,47,82,101,108,111,97,100,67,111,117,110,116,101,114,7,0,4,1,0,16,106,97,118,97,47,108,97,110,103,47,84,104,114,101,97,100,1,0,11,114,101,108,111,97,100,67,111,117,110,116,1,0,1,73,1,0,6,60,105,110,105,116,62,1,0,21,40,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,59,41,86,1,0,4,67,111,100,101,10,0,3,0,11,12,0,7,0,12,1,0,3,40,41,86,10,0,1,0,14,12,0,15,0,8,1,0,7,115,101,116,78,97,109,101,1,0,15,76,105,110,101,78,117,109,98,101,114,84,97,98,108,101,1,0,18,76,111,99,97,108,86,97,114,105,97,98,108,101,84,97,98,108,101,1,0,4,116,104,105,115,1,0,51,76,99,111,109,47,100,101,97,100,109,101,110,47,98,117,107,107,105,116,47,112,101,114,115,105,115,116,101,110,99,101,47,109,97,105,110,47,82,101,108,111,97,100,67,111,117,110,116,101,114,59,1,0,4,110,97,109,101,1,0,18,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,59,1,0,14,115,101,116,82,101,108,111,97,100,67,111,117,110,116,1,0,4,40,73,41,86,9,0,1,0,25,12,0,5,0,6,1,0,1,105,1,0,13,83,116,97,99,107,77,97,112,84,97,98,108,101,7,0,29,1,0,19,106,97,118,97,47,108,97,110,103,47,84,104,114,111,119,97,98,108,101,1,0,9,97,100,100,82,101,108,111,97,100,1,0,14,103,101,116,82,101,108,111,97,100,67,111,117,110,116,1,0,3,40,41,73,1,0,3,114,117,110,5,0,0,0,0,0,15,66,64,10,0,3,0,37,12,0,38,0,39,1,0,5,115,108,101,101,112,1,0,4,40,74,41,86,7,0,41,1,0,19,106,97,118,97,47,108,97,110,103,47,69,120,99,101,112,116,105,111,110,1,0,3,101,110,100,10,0,1,0,44,12,0,45,0,12,1,0,9,105,110,116,101,114,114,117,112,116,1,0,24,114,101,116,114,105,101,118,101,80,101,114,115,105,115,116,101,110,116,79,98,106,101,99,116,1,0,71,40,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,59,41,76,99,111,109,47,100,101,97,100,109,101,110,47,98,117,107,107,105,116,47,112,101,114,115,105,115,116,101,110,99,101,47,109,97,105,110,47,82,101,108,111,97,100,67,111,117,110,116,101,114,59,10,0,3,0,49,12,0,50,0,51,1,0,17,103,101,116,65,108,108,83,116,97,99,107,84,114,97,99,101,115,1,0,17,40,41,76,106,97,118,97,47,117,116,105,108,47,77,97,112,59,11,0,53,0,55,7,0,54,1,0,13,106,97,118,97,47,117,116,105,108,47,77,97,112,12,0,56,0,57,1,0,6,107,101,121,83,101,116,1,0,17,40,41,76,106,97,118,97,47,117,116,105,108,47,83,101,116,59,11,0,59,0,61,7,0,60,1,0,13,106,97,118,97,47,117,116,105,108,47,83,101,116,12,0,62,0,63,1,0,8,105,116,101,114,97,116,111,114,1,0,22,40,41,76,106,97,118,97,47,117,116,105,108,47,73,116,101,114,97,116,111,114,59,11,0,65,0,67,7,0,66,1,0,18,106,97,118,97,47,117,116,105,108,47,73,116,101,114,97,116,111,114,12,0,68,0,69,1,0,4,110,101,120,116,1,0,20,40,41,76,106,97,118,97,47,108,97,110,103,47,79,98,106,101,99,116,59,10,0,3,0,71,12,0,72,0,73,1,0,7,103,101,116,78,97,109,101,1,0,20,40,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,59,10,0,75,0,77,7,0,76,1,0,16,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,12,0,78,0,79,1,0,6,101,113,117,97,108,115,1,0,21,40,76,106,97,118,97,47,108,97,110,103,47,79,98,106,101,99,116,59,41,90,11,0,65,0,81,12,0,82,0,83,1,0,7,104,97,115,78,101,120,116,1,0,3,40,41,90,10,0,40,0,85,12,0,86,0,12,1,0,15,112,114,105,110,116,83,116,97,99,107,84,114,97,99,101,7,0,88,1,0,30,106,97,118,97,47,108,97,110,103,47,78,117,108,108,80,111,105,110,116,101,114,69,120,99,101,112,116,105,111,110,7,0,90,1,0,23,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,8,0,92,1,0,28,78,111,32,80,101,114,115,105,115,116,101,110,99,101,32,79,98,106,101,99,116,32,110,97,109,101,100,32,10,0,89,0,94,12,0,7,0,8,10,0,89,0,96,12,0,97,0,98,1,0,6,97,112,112,101,110,100,1,0,45,40,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,59,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,59,8,0,100,1,0,7,32,101,120,105,115,116,46,10,0,89,0,102,12,0,103,0,73,1,0,8,116,111,83,116,114,105,110,103,10,0,87,0,94,1,0,1,116,1,0,18,76,106,97,118,97,47,108,97,110,103,47,84,104,114,101,97,100,59,1,0,1,101,1,0,21,76,106,97,118,97,47,108,97,110,103,47,69,120,99,101,112,116,105,111,110,59,1,0,10,83,111,117,114,99,101,70,105,108,101,1,0,18,82,101,108,111,97,100,67,111,117,110,116,101,114,46,106,97,118,97,0,33,0,1,0,3,0,0,0,1,0,2,0,5,0,6,0,0,0,7,0,1,0,7,0,8,0,1,0,9,0,0,0,70,0,2,0,2,0,0,0,10,42,-73,0,10,42,43,-74,0,13,-79,0,0,0,2,0,16,0,0,0,14,0,3,0,0,0,6,0,4,0,7,0,9,0,8,0,17,0,0,0,22,0,2,0,0,0,10,0,18,0,19,0,0,0,0,0,10,0,20,0,21,0,1,0,1,0,22,0,23,0,1,0,9,0,0,0,126,0,2,0,3,0,0,0,18,42,89,77,-62,42,27,-75,0,24,44,-61,-89,0,6,44,-61,-65,-79,0,2,0,4,0,11,0,14,0,0,0,14,0,16,0,14,0,0,0,3,0,16,0,0,0,18,0,4,0,0,0,12,0,4,0,13,0,9,0,12,0,17,0,15,0,17,0,0,0,22,0,2,0,0,0,18,0,18,0,19,0,0,0,0,0,18,0,26,0,6,0,1,0,27,0,0,0,22,0,2,-1,0,14,0,3,7,0,1,1,7,0,1,0,1,7,0,28,-6,0,2,0,1,0,30,0,12,0,1,0,9,0,0,0,120,0,3,0,2,0,0,0,23,42,89,76,-62,42,89,-76,0,24,4,96,-75,0,24,43,-61,-89,0,6,43,-61,-65,-79,0,2,0,4,0,16,0,19,0,0,0,19,0,21,0,19,0,0,0,3,0,16,0,0,0,18,0,4,0,0,0,17,0,4,0,18,0,14,0,17,0,22,0,20,0,17,0,0,0,12,0,1,0,0,0,23,0,18,0,19,0,0,0,27,0,0,0,21,0,2,-1,0,19,0,2,7,0,1,7,0,1,0,1,7,0,28,-6,0,2,0,1,0,31,0,32,0,1,0,9,0,0,0,104,0,2,0,2,0,0,0,14,42,89,76,-62,42,-76,0,24,43,-61,-84,43,-61,-65,0,2,0,4,0,10,0,11,0,0,0,11,0,13,0,11,0,0,0,3,0,16,0,0,0,14,0,3,0,0,0,22,0,4,0,23,0,11,0,22,0,17,0,0,0,12,0,1,0,0,0,14,0,18,0,19,0,0,0,27,0,0,0,18,0,1,-1,0,11,0,2,7,0,1,7,0,1,0,1,7,0,28,0,1,0,33,0,12,0,1,0,9,0,0,0,82,0,2,0,2,0,0,0,11,20,0,34,-72,0,36,-89,-1,-6,76,-79,0,1,0,0,0,6,0,9,0,40,0,3,0,16,0,0,0,14,0,3,0,0,0,30,0,6,0,31,0,10,0,33,0,17,0,0,0,12,0,1,0,0,0,11,0,18,0,19,0,0,0,27,0,0,0,7,0,2,0,72,7,0,40,0,1,0,42,0,12,0,1,0,9,0,0,0,51,0,1,0,1,0,0,0,5,42,-74,0,43,-79,0,0,0,2,0,16,0,0,0,10,0,2,0,0,0,36,0,4,0,37,0,17,0,0,0,12,0,1,0,0,0,5,0,18,0,19,0,0,0,9,0,46,0,47,0,1,0,9,0,0,0,-36,0,5,0,3,0,0,0,89,-72,0,48,-71,0,52,1,0,-71,0,58,1,0,77,-89,0,29,44,-71,0,64,1,0,-64,0,3,76,43,-74,0,70,42,-74,0,74,-103,0,8,43,-64,0,1,-80,44,-71,0,80,1,0,-102,-1,-32,-89,0,8,76,43,-74,0,84,-69,0,87,89,-69,0,89,89,18,91,-73,0,93,42,-74,0,95,18,99,-74,0,95,-74,0,101,-73,0,104,-65,0,2,0,0,0,42,0,55,0,40,0,43,0,52,0,55,0,40,0,3,0,16,0,0,0,22,0,5,0,0,0,41,0,27,0,42,0,43,0,41,0,52,0,44,0,60,0,45,0,17,0,0,0,32,0,3,0,0,0,89,0,20,0,21,0,0,0,27,0,16,0,105,0,106,0,1,0,56,0,4,0,107,0,108,0,1,0,27,0,0,0,31,0,4,-1,0,17,0,3,7,0,75,0,7,0,65,0,0,25,-1,0,11,0,1,7,0,75,0,1,7,0,40,4,0,1,0,109,0,0,0,2,0,110};




}
